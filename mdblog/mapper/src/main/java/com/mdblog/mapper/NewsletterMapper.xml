<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mdblog.mapper.NewsletterMapper" >
  <resultMap id="BaseResultMap" type="com.mdblog.po.Newsletter" >
    <id column="NL_ID" property="nlId" jdbcType="BIGINT" />
    <result column="NL_From_UID" property="nlFromUid" jdbcType="BIGINT" />
    <result column="NL_To_UID" property="nlToUid" jdbcType="BIGINT" />
    <result column="NL_Text" property="nlText" jdbcType="CHAR" />
    <result column="NL_IsRead" property="nlIsread" jdbcType="INTEGER" />
    <result column="NL_Createtime" property="nlCreatetime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    NL_ID, NL_From_UID, NL_To_UID, NL_Text, NL_IsRead, NL_Createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mdblog.po.NewsletterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from newsletter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from newsletter
    where NL_ID = #{nlId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from newsletter
    where NL_ID = #{nlId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mdblog.po.NewsletterExample" >
    delete from newsletter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mdblog.po.Newsletter" >
    insert into newsletter (NL_ID, NL_From_UID, NL_To_UID, 
      NL_Text, NL_IsRead, NL_Createtime
      )
    values (#{nlId,jdbcType=BIGINT}, #{nlFromUid,jdbcType=BIGINT}, #{nlToUid,jdbcType=BIGINT}, 
      #{nlText,jdbcType=CHAR}, #{nlIsread,jdbcType=INTEGER}, #{nlCreatetime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mdblog.po.Newsletter" >
    insert into newsletter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nlId != null" >
        NL_ID,
      </if>
      <if test="nlFromUid != null" >
        NL_From_UID,
      </if>
      <if test="nlToUid != null" >
        NL_To_UID,
      </if>
      <if test="nlText != null" >
        NL_Text,
      </if>
      <if test="nlIsread != null" >
        NL_IsRead,
      </if>
      <if test="nlCreatetime != null" >
        NL_Createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nlId != null" >
        #{nlId,jdbcType=BIGINT},
      </if>
      <if test="nlFromUid != null" >
        #{nlFromUid,jdbcType=BIGINT},
      </if>
      <if test="nlToUid != null" >
        #{nlToUid,jdbcType=BIGINT},
      </if>
      <if test="nlText != null" >
        #{nlText,jdbcType=CHAR},
      </if>
      <if test="nlIsread != null" >
        #{nlIsread,jdbcType=INTEGER},
      </if>
      <if test="nlCreatetime != null" >
        #{nlCreatetime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mdblog.po.NewsletterExample" resultType="java.lang.Integer" >
    select count(*) from newsletter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update newsletter
    <set >
      <if test="record.nlId != null" >
        NL_ID = #{record.nlId,jdbcType=BIGINT},
      </if>
      <if test="record.nlFromUid != null" >
        NL_From_UID = #{record.nlFromUid,jdbcType=BIGINT},
      </if>
      <if test="record.nlToUid != null" >
        NL_To_UID = #{record.nlToUid,jdbcType=BIGINT},
      </if>
      <if test="record.nlText != null" >
        NL_Text = #{record.nlText,jdbcType=CHAR},
      </if>
      <if test="record.nlIsread != null" >
        NL_IsRead = #{record.nlIsread,jdbcType=INTEGER},
      </if>
      <if test="record.nlCreatetime != null" >
        NL_Createtime = #{record.nlCreatetime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update newsletter
    set NL_ID = #{record.nlId,jdbcType=BIGINT},
      NL_From_UID = #{record.nlFromUid,jdbcType=BIGINT},
      NL_To_UID = #{record.nlToUid,jdbcType=BIGINT},
      NL_Text = #{record.nlText,jdbcType=CHAR},
      NL_IsRead = #{record.nlIsread,jdbcType=INTEGER},
      NL_Createtime = #{record.nlCreatetime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mdblog.po.Newsletter" >
    update newsletter
    <set >
      <if test="nlFromUid != null" >
        NL_From_UID = #{nlFromUid,jdbcType=BIGINT},
      </if>
      <if test="nlToUid != null" >
        NL_To_UID = #{nlToUid,jdbcType=BIGINT},
      </if>
      <if test="nlText != null" >
        NL_Text = #{nlText,jdbcType=CHAR},
      </if>
      <if test="nlIsread != null" >
        NL_IsRead = #{nlIsread,jdbcType=INTEGER},
      </if>
      <if test="nlCreatetime != null" >
        NL_Createtime = #{nlCreatetime,jdbcType=BIGINT},
      </if>
    </set>
    where NL_ID = #{nlId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mdblog.po.Newsletter" >
    update newsletter
    set NL_From_UID = #{nlFromUid,jdbcType=BIGINT},
      NL_To_UID = #{nlToUid,jdbcType=BIGINT},
      NL_Text = #{nlText,jdbcType=CHAR},
      NL_IsRead = #{nlIsread,jdbcType=INTEGER},
      NL_Createtime = #{nlCreatetime,jdbcType=BIGINT}
    where NL_ID = #{nlId,jdbcType=BIGINT}
  </update>
</mapper>